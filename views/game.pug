extends layout

block content
  h1= title
  p Welcome to #{title}

  div.container-fluid.col-sm-12
    div.col-sm-9
      table(id='board')
        tbody 
          each row in game_board
            tr
            if row
              each tile in row
                if tile
                  if tile.letter != 0
                    td.board_tile(data-row=tile.row, data-column=tile.column)= tile.letter.value
                  else if tile.premium != 0
                    td.board_tile(data-row=tile.row, data-column=tile.column)= tile.premium
                  else
                    td.board_tile(data-row=tile.row, data-column=tile.column)= '.'
      br
      br
      h4 My Score: 34
      table
        thead
          tr
            th.rack.head(colspan='7') Rack
        tbody
          tr
            each tile in rack
              td.rack.letter(data-row_id=tile.game_tile_id)=tile.value
      br

      div.col-sm-9
        button.col-sm-3(id='play') Play
        button.col-sm-3(id='swap') Swap
        button.col-sm-3 Pass
        br
        button.col-sm-9.confirmation Confirm Action

    div.col-sm-3
      div
        h3 Remaining Tiles: 
          p(id='tile_count') 56

      div.chatwindow
        ul#messages
    
      br
      form()
        input#m(type='text', placeholder='message' name='name')
        button.btn(type='submit') Send

  script(src='/socket.io/socket.io.js')
  script.
    const socket = io();

    current_play = [];
    tiles_to_swap = [];

    $(function () {
      socket.on('chat message', function(msg){
        debugger;
        $('#messages').append($('<li>').text(msg));
        window.scrollTo(0, document.body.scrollHeight);
      });

      socket.on('swap', function(swapped_tiles){
        //debugger;
        console.log(swapped_tiles);

        $('.swapped').each(function(i, letter){
          $(this).html(swapped_tiles[i].value);
        });
        
      });

      socket.on('tile', function(word){
        
        $(word).each(function(i, letter){
          //console.log(letter);
          $('td[data-column='+letter.column+'][data-row='+letter.row+']').html(letter.value);
        });
        
        $('#tile_count').html('54');
        
        //console.log('something');
        //alert(obj.column);

        //$('td[data-column='+obj.column+'][data-row='+obj.row+']').html(obj.value);
        //window.scrollTo(0, document.body.scrollHeight);
      });


      $('form').submit(function(e){
        e.preventDefault();
        $('#messages').append($('<li>').text( $('#m').val()));
        socket.emit('chat message', $('#m').val());
        $('#m').val('');
        return false;
      });

      $(document).on('click', '.rack.letter', function(){
        
        $('.rack.letter').removeClass('active');
        $(this).addClass('active');
      });

      $('.board_tile').on('click',function(){
        
        let active_letter = $('.rack.letter.active');


        $(this).html($('.rack.letter.active').text());

        let letter = new Object();
        letter.row = $(this).data('row');
        letter.column = $(this).data('column');
        letter.value = active_letter.text();
        active_letter.text('');
        active_letter.addClass('empty');
        current_play.push(letter);

      });

      $('#play').on('click',function(){
        
        socket.emit('tile',current_play);
        console.log(current_play);
        $('.empty').each(function(i, obj){
          $(this).html(String.fromCharCode(Math.floor(Math.random() * 26) + 65));
        });
        current_play = [];
        return false;
      })

      $('#swap').on('click',function(){
          $('.rack.letter').removeClass('letter').addClass('swappable');
      })

      $(document).on('click', '.rack.swappable',function(){
        $(this).addClass('swapped');
        $(this).css('background-color','#f7f6a8');

        let letter = new Object();
        letter.game_tile_id = $(this).data('row_id');
        tiles_to_swap.push(letter);
      });

      $('.confirmation').on('click',function(){
        
        socket.emit('swap',tiles_to_swap);
        console.log(tiles_to_swap);
        tiles_to_swap = [];
        return false;
      })

    });